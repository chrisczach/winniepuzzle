{"version":3,"sources":["splash/splash.module.css","tile/tile.module.css","board/board.js","tile/tile.js","splash/splash.js","App.js","serviceWorker.js","index.js","app.module.css","board/board.module.css"],"names":["module","exports","splash","shown","center","start","incButton","display","up","down","tile","load","Board","props","grid","grid-template-columns","gridSize","grid-template-rows","react_default","a","createElement","style","className","classes","board","children","Tile","row","Math","floor","index","boardSize","column","size","offSetRow","imageRow","offSetColumn","imageColumn","imageSize","image","grid-column","toString","grid-row","background-image","background-size","background-position","blank","onClick","e","clickHandler","Splash","currGame","concat","win","setOptions","level","newGame","images","id","item","updateAvailableMovesUtility","state","currIndex","findIndex","possibleMoves","push","length","Object","objectSpread","moveTileUtility","indexOf","_ref","moveHistory","toConsumableArray","checkBoardUtility","forEach","i","setBoardUtility","openSpot","pow","newGameUtility","numTiles","random","randomizeBoardUtility","_loop","moves","lastMove","App","incLevel","incBoardSize","_this","setState","min","max","setTile","tileSize","window","innerHeight","innerWidth","setBoard","updateAvailableMoves","moveTile","reset","checkBoard","this","addEventListener","removeEventListener","_this2","main","board_board","map","assign","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.71f5808d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"splash\":\"splash_splash__2kac6\",\"shown\":\"splash_shown__2EdMD\",\"center\":\"splash_center__327C6\",\"start\":\"splash_start__2xBp2\",\"incButton\":\"splash_incButton__Ac6Zn\",\"display\":\"splash_display__3cvII\",\"up\":\"splash_up__1k1pb\",\"down\":\"splash_down__x2Dpp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tile\":\"tile_tile__rCIb0\",\"load\":\"tile_load__2STJf\"};","import React, { Component } from 'react';\nimport classes from './board.module.css';\n\nconst Board = (props) => {\n  const grid = {\n    \"grid-template-columns\": 'repeat(' + props.gridSize + ', 1fr)',\n    \"grid-template-rows\": 'repeat(' + props.gridSize + ', 1fr)'\n  };\n  return (\n    <div style={grid} className={classes.board}>\n    {props.children}\n    </div>\n)\n}\n\nexport default Board","import React, { Component } from 'react';\nimport classes from './tile.module.css';\n\nconst Tile = props => {\n  const row = Math.floor((props.index - 1) / props.boardSize) + 1;\n  const column = (props.index) % (props.boardSize) === 0 ? props.boardSize : (props.index) % (props.boardSize);\n  const size = props.size;\n  const offSetRow = size - (size * props.imageRow);\n  const offSetColumn = size - (size * props.imageColumn);\n  const imageSize = size * props.boardSize;\n  \n  const image = {\n    \"grid-column\": column.toString(),\n    \"grid-row\": row.toString(),\n    \"background-image\": 'url(\"./img/' + props.image.toString() + '\")',\n    \"background-size\": imageSize.toString() + 'px ' + imageSize.toString() + 'px',\n    \"background-position\": offSetColumn.toString() + 'px ' + offSetRow.toString() + 'px'\n  };\n\n  const blank = {\n    \"grid-column\": column.toString(),\n    \"grid-row\": row.toString(),\n    // \"background-image\": 'url(\"./img/' + props.image.toString() + '\")',\n    // \"background-size\": imageSize.toString() + 'px ' + imageSize.toString() + 'px',\n    // \"background-position\": offSetColumn.toString() + 'px ' + offSetRow.toString() + 'px'\n  };\n\n  return (\n    <div onClick={e=> props.clickHandler(props.index, e)}  style={props.imageRow === 'X' ? blank : image} className={classes.tile}>\n\n\n    </div>\n  )\n}\n\n\nexport default Tile","import React, { Component } from 'react';\nimport classes from './splash.module.css';\n\nconst Splash = props => {\n  const levelUp = () => props.setOptions(1, 0);\n  const levelDown = () => props.setOptions(-1, 0);\n  const sizeUp = () => props.setOptions(0, 1);\n  const sizeDown = () => props.setOptions(0, -1);\n\n\n\n    return (\n      <div className={!props.currGame ? `${classes.shown} ${classes.splash}` : classes.splash}>\n        <div className={classes.center}>\n          <h1>Winnie Shuffle!!</h1>\n          {props.win && <h2>You Win!</h2>}\n\n          <h3>Select Level</h3>\n          <div>\n            <div className={`${classes.incButton} ${classes.up}`} onClick={levelUp}>&nbsp; </div>\n            <div className={classes.display}>{props.level}</div>\n            <div className={`${classes.incButton} ${classes.down}`} onClick={levelDown}>&nbsp; </div>\n          </div>\n\n          <h3>Select Grid Size</h3>\n          <div>\n            <div className={`${classes.incButton} ${classes.up}`} onClick={sizeUp}>&nbsp; </div>\n            <div className={classes.display}>{props.boardSize}</div>\n            <div className={`${classes.incButton} ${classes.down}`} onClick={sizeDown}>&nbsp;</div>\n          </div>\n          <div onClick={props.newGame} className={classes.start}>Start Game &rarr;</div>\n        </div>\n      \n      </div>\n    )\n\n\n\n}\n\nexport default Splash;","import React, { Component } from 'react';\nimport Board from './board/board';\nimport Tile from './tile/tile';\nimport Splash from './splash/splash';\nimport classes from './app.module.css';\n\n//`./img/${props.item.item}`\n\nconst images = [\n  { id: 1, item: 'winnie1.jpg' },\n  { id: 2, item: 'winnie2.jpg' },\n  { id: 3, item: 'winnie3.jpg' },\n  { id: 4, item: 'winnie4.jpg' },\n  { id: 5, item: 'winnie5.jpg' },\n  { id: 6, item: 'winnie6.jpg' },\n  { id: 7, item: 'winnie7.jpg' },\n  { id: 8, item: 'winnie8.jpg' },\n  { id: 9, item: 'winnie9.jpg' },\n  { id: 10, item: 'winnie10.jpg' },\n  { id: 11, item: 'winnie11.jpg' },\n  { id: 12, item: 'winnie12.jpg' }\n];\n\nconst updateAvailableMovesUtility = state => {\n  const currIndex = state.board.findIndex(e => e.imageRow === 'X');\n  const possibleMoves = [];\n  if ((currIndex + 1) % state.boardSize !== 0)\n    possibleMoves.push(currIndex + 1);\n  if (currIndex % state.boardSize !== 0) possibleMoves.push(currIndex - 1);\n  if (currIndex - state.boardSize >= 0)\n    possibleMoves.push(currIndex - state.boardSize);\n  if (currIndex + state.boardSize < state.board.length)\n    possibleMoves.push(currIndex + state.boardSize);\n  return { ...state, possibleMoves };\n};\n\nconst moveTileUtility = (state, index) => {\n  const currIndex = state.board.findIndex(e => e.imageRow === 'X');\n  if (state.possibleMoves.indexOf(index - 1) === -1) return;\n  const board = state.board;\n  [board[index - 1], board[currIndex]] = [board[currIndex], board[index - 1]];\n  const moveHistory = [...state.moveHistory, currIndex];\n\n  state = { ...state, board, moveHistory };\n  state = updateAvailableMovesUtility(state);\n\n  return state;\n};\n\nconst checkBoardUtility = state => {\n  let win = true;\n  let currGame = state.currGame;\n  state.board.forEach((e, i) => {\n    const homeIndex = (e.imageRow - 1) * state.boardSize + (e.imageColumn - 1);\n    if (homeIndex !== i && e.imageRow !== 'X') {\n      win = false;\n    }\n  });\n  if (win) {currGame = false;}\n  return { ...state, win, currGame };\n};\n\nconst setBoardUtility = state => {\n  const board = [];\n  for (let imageRow = 1; imageRow <= state.boardSize; imageRow++) {\n    for (let imageColumn = 1; imageColumn <= state.boardSize; imageColumn++) {\n      if (imageColumn === state.boardSize && imageRow === state.boardSize) {\n        board.push({ imageRow: 'X', imageColumn: 'X' });\n      } else {\n        board.push({ imageRow, imageColumn });\n      }\n    }\n  }\n  return {\n    ...state,\n    board,\n    openSpot: state.boardSize ** 2 - 1,\n    moveHistory: []\n  };\n};\n\nconst newGameUtility = (state, numTiles, level) => {\n  const image = images[Math.floor(Math.random() * images.length)].item;\n  const win = false;\n  const boardSize = numTiles;\n  const currGame = true;\n  return { ...state, image, win, level, boardSize, currGame };\n};\n\nconst randomizeBoardUtility = (state, level) => {\n  for (let i = 0; i < level * 10; i++) {\n    const moves = state.possibleMoves;\n    const lastMove = state.moveHistory[state.moveHistory.length - 1];\n    const tile = () => {\n      if (moves[Math.floor(Math.random() * moves.length)] === lastMove) {\n        return tile();\n      } else {\n        return moves[Math.floor(Math.random() * moves.length)];\n      }\n    };\n\n    state = moveTileUtility(state, tile() + 1);\n  }\n\n  return state;\n};\n\nclass App extends Component {\n  state = {\n    level: 1,\n    boardSize: 4,\n    currGame: false,\n    win: false\n  };\n\n  setOptions = (incLevel, incBoardSize) => {\n    this.setState(state => {\n      const level = Math.min(Math.max(state.level + incLevel, 1),10);\n      const boardSize = Math.min(Math.max(state.boardSize + incBoardSize,3),10);\n      return {...state, level, boardSize}\n    })\n  }\n\n  setTile = () => {\n    this.setState(state => {\n      return {\n        tileSize:\n          (Math.min(window.innerHeight, window.innerWidth) * 0.98) /\n          state.boardSize\n      };\n    });\n  };\n\n  setBoard = () => {\n    this.setState(state => {\n      state = setBoardUtility(state);\n      state = updateAvailableMovesUtility(state);\n      return state;\n    });\n  };\n\n  updateAvailableMoves = () => {\n    this.setState(state => updateAvailableMovesUtility(state));\n  };\n\n  moveTile = (index, e) => {\n    this.setState(state => {\n      state = moveTileUtility(state, index);\n      state = checkBoardUtility(state);\n      return state;\n    });\n  };\n\n  reset = () => {\n    this.setState({level: 1,boardSize: 4,currGame: false, win: false})\n  }\n\n  checkBoard = () => {\n    this.setState(state => checkBoardUtility(state));\n  };\n\n  newGame = () => {\n    this.setState(state => {\n      state = newGameUtility(state, state.boardSize, state.level);\n      state = setBoardUtility(state);\n      state = updateAvailableMovesUtility(state);\n      state = randomizeBoardUtility(state, state.level);\n      return state;\n    });\n  };\n\n  componentDidMount() {\n    //this.newGame(this.state.boardSize, this.state.moves);\n    this.setTile();\n    window.addEventListener('resize', this.setTile);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setTile);\n  }\n\n  render() {\n    return (\n      <div className={classes.main}>\n        <div onClick={this.reset} className={classes.reset}>Reset</div>\n        <Splash\n          setOptions={this.setOptions}\n          level={this.state.level}\n          boardSize={this.state.boardSize}\n          newGame={this.newGame}\n          currGame={this.state.currGame}\n          win={this.state.win}\n        />\n        <Board gridSize={this.state.boardSize}>\n          {this.state.board &&\n            this.state.board.map((e, i) => (\n              <Tile\n                clickHandler={this.moveTile}\n                {...e}\n                image={this.state.image}\n                boardSize={this.state.boardSize}\n                index={i + 1}\n                size={this.state.tileSize}\n              />\n            ))}\n        </Board>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"app_main__WHPBk\",\"reset\":\"app_reset__2S36O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"board_board__16f6O\"};"],"sourceRoot":""}
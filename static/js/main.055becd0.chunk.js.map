{"version":3,"sources":["splash/splash.module.css","board/board.module.css","board/board.js","tile/tile.js","splash/splash.js","utility.js","App.js","serviceWorker.js","index.js","app.module.css","tile/tile.module.css"],"names":["module","exports","splash","shown","center","start","incButton","display","up","down","board","Board","props","react_default","a","createElement","className","classes","children","Tile","row","Math","floor","index","boardSize","column","size","offSetRow","imageRow","offSetColumn","imageColumn","imageSize","direction","lastMove","last","tileIndex","styleToAdd","image","grid-column","toString","grid-row","background-image","background-size","background-position","blank","onClick","e","clickHandler","style","concat","tile","Splash","currGame","win","setOptions","level","newGame","updateAvailableMovesUtility","state","currIndex","findIndex","possibleMoves","push","length","Object","objectSpread","moveTileUtility","indexOf","_ref","moveHistory","toConsumableArray","checkBoardUtility","forEach","i","setBoardUtility","openSpot","pow","setTileUtility","tileSize","min","window","innerHeight","innerWidth","images","App","incLevel","incBoardSize","_this","setState","max","setTile","utility","setBoard","moveTile","reset","checkBoard","_loop","moves","random","this","addEventListener","removeEventListener","_this2","main","board_board","gridSize","map","assign","source","href","target","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","left","right"],"mappings":"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","file":"static/js/main.055becd0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"splash\":\"splash_splash__2kac6\",\"shown\":\"splash_shown__2EdMD\",\"center\":\"splash_center__327C6\",\"start\":\"splash_start__2xBp2\",\"incButton\":\"splash_incButton__Ac6Zn\",\"display\":\"splash_display__3cvII\",\"up\":\"splash_up__1k1pb\",\"down\":\"splash_down__x2Dpp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"board_board__16f6O\"};","import React from 'react';\nimport classes from './board.module.css';\n\nconst Board = props => <div className={classes.board}> {props.children}</div>;\n\nexport default Board;\n","import React from 'react';\nimport classes from './tile.module.css';\n\nconst Tile = props => {\n  const row = Math.floor((props.index - 1) / props.boardSize) + 1;\n  const column =\n    props.index % props.boardSize === 0\n      ? props.boardSize\n      : props.index % props.boardSize;\n  const size = props.size;\n  const offSetRow = size - size * props.imageRow;\n  const offSetColumn = size - size * props.imageColumn;\n  const imageSize = size * props.boardSize;\n  const direction = props.lastMove.direction;\n  let last = props.lastMove.tileIndex;\n  if (direction === 'up') {\n    last -= props.boardSize;\n  } else if (direction === 'down') {\n    last += props.boardSize;\n  } else if (direction === 'left') {\n    last--;\n  } else {\n    last++;\n  }\n  const styleToAdd = last === props.index && direction;\n  const image = {\n    'grid-column': column.toString(),\n    'grid-row': row.toString(),\n    'background-image': 'url(\"./img/' + props.image.toString() + '\")',\n    'background-size':\n      imageSize.toString() + 'px ' + imageSize.toString() + 'px',\n    'background-position':\n      offSetColumn.toString() + 'px ' + offSetRow.toString() + 'px'\n  };\n  const blank = {\n    'grid-column': column.toString(),\n    'grid-row': row.toString()\n  };\n  return (\n    <div\n      onClick={e => props.clickHandler(props.index, e)}\n      style={props.imageRow === 'X' ? blank : image}\n      className={`${classes.tile} ${classes[styleToAdd]}`}\n    />\n  );\n};\n\nexport default Tile;\n","import React, { Component } from 'react';\nimport classes from './splash.module.css';\n\nconst Splash = props => {\n  const levelUp = () => props.setOptions(1, 0);\n  const levelDown = () => props.setOptions(-1, 0);\n  const sizeUp = () => props.setOptions(0, 1);\n  const sizeDown = () => props.setOptions(0, -1);\n  return (\n    <div\n      className={\n        !props.currGame ? `${classes.shown} ${classes.splash}` : classes.splash\n      }\n    >\n      <div className={classes.center}>\n        <h1>Winnie Shuffle!</h1>\n        {props.win && <h2>You Win!</h2>}\n\n        <h3>Select Level</h3>\n        <div>\n          <div\n            className={`${classes.incButton} ${classes.up}`}\n            onClick={levelUp}\n          >\n            &nbsp;{' '}\n          </div>\n          <div className={classes.display}>{props.level}</div>\n          <div\n            className={`${classes.incButton} ${classes.down}`}\n            onClick={levelDown}\n          >\n            &nbsp;{' '}\n          </div>\n        </div>\n\n        <h3>Select Grid Size</h3>\n        <div>\n          <div\n            className={`${classes.incButton} ${classes.up}`}\n            onClick={sizeUp}\n          >\n            &nbsp;{' '}\n          </div>\n          <div className={classes.display}>{props.boardSize}</div>\n          <div\n            className={`${classes.incButton} ${classes.down}`}\n            onClick={sizeDown}\n          >\n            &nbsp;\n          </div>\n        </div>\n        <div onClick={props.newGame} className={classes.start}>\n          Start Game &rarr;\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Splash;\n","export function updateAvailableMovesUtility (state) {\n  const currIndex = state.board.findIndex(e => e.imageRow === 'X');\n  const possibleMoves = [];\n  if ((currIndex + 1) % state.boardSize !== 0)\n    possibleMoves.push(currIndex + 1);\n  if (currIndex % state.boardSize !== 0) possibleMoves.push(currIndex - 1);\n  if (currIndex - state.boardSize >= 0)\n    possibleMoves.push(currIndex - state.boardSize);\n  if (currIndex + state.boardSize < state.board.length)\n    possibleMoves.push(currIndex + state.boardSize);\n  return { ...state, possibleMoves };\n};\n\nexport function moveTileUtility (state, index) {\n  const currIndex = state.board.findIndex(e => e.imageRow === 'X');\n  if (state.possibleMoves.indexOf(index - 1) === -1) return state;\n  const board = state.board;\n  [board[index - 1], board[currIndex]] = [board[currIndex], board[index - 1]];\n  const moveHistory = [...state.moveHistory, currIndex];\n  const direction = index === currIndex ? 'right' : index - 2 === currIndex ? 'left': index > currIndex ? 'up' : 'down';\n  const lastMove = { tileIndex: index, direction };\n  state = { ...state, board, moveHistory, lastMove };\n  state = updateAvailableMovesUtility(state);\n\n  return state;\n};\n\nexport function checkBoardUtility (state) {\n  let win = true;\n  let currGame = state.currGame;\n  state.board.forEach((e, i) => {\n    const homeIndex = (e.imageRow - 1) * state.boardSize + (e.imageColumn - 1);\n    if (homeIndex !== i && e.imageRow !== 'X') {\n      win = false;\n    }\n  });\n  if (win) {\n    currGame = false;\n  }\n  return { ...state, win, currGame };\n};\n\nexport function setBoardUtility (state) {\n  const board = [];\n  for (let imageRow = 1; imageRow <= state.boardSize; imageRow++) {\n    for (let imageColumn = 1; imageColumn <= state.boardSize; imageColumn++) {\n      if (imageColumn === state.boardSize && imageRow === state.boardSize) {\n        board.push({ imageRow: 'X', imageColumn: 'X' });\n      } else {\n        board.push({ imageRow, imageColumn });\n      }\n    }\n  }\n  return {\n    ...state,\n    board,\n    openSpot: state.boardSize ** 2 - 1,\n    moveHistory: []\n  };\n};\n\nexport function setTileUtility (state) {\n  const tileSize = (Math.min(window.innerHeight, window.innerWidth) * 0.98) / state.boardSize\n  return { ...state, tileSize }\n    \n};\n\nexport function newGameUtility (state, images) {\n  const image = images[Math.floor(Math.random() * images.length)];\n  const win = false;\n  const currGame = true;\n  return { ...state, image, win , currGame };\n};\n\nexport function randomizeBoardUtility (state) {\n  for (let i = 0; i < state.level * 15; i++) {\n    const moves = state.possibleMoves;\n    const lastMove = state.moveHistory[state.moveHistory.length - 1];\n    const tile = () => {\n      if (moves[Math.floor(Math.random() * moves.length)] === lastMove) {\n        return tile();\n      } else {\n        return moves[Math.floor(Math.random() * moves.length)];\n      }\n    };\n\n    state = moveTileUtility(state, tile() + 1);\n  }\n\n  return state;\n};","import React, { Component } from 'react';\nimport Board from './board/board';\nimport Tile from './tile/tile';\nimport Splash from './splash/splash';\nimport classes from './app.module.css';\nimport * as utility from './utility';\n\n//`./img/${props.item.item}`\n\nconst images = [\n  'winnie1.jpg' ,\n  'winnie2.jpg',\n  'winnie3.jpg',\n  'winnie4.jpg',\n  'winnie5.jpg',\n  'winnie6.jpg',\n  'winnie7.jpg',\n  'winnie8.jpg',\n  'winnie9.jpg',\n  'winnie10.jpg',\n  'winnie11.jpg',\n  'winnie12.jpg'\n];\n\nclass App extends Component {\n  state = {\n    level: 1,\n    boardSize: 4,\n    currGame: false,\n    win: false\n  };\n\n  setOptions = (incLevel, incBoardSize) => {\n    this.setState(state => {\n      const level = Math.min(Math.max(state.level + incLevel, 1), 10);\n      const boardSize = Math.min(\n        Math.max(state.boardSize + incBoardSize, 3),\n        10\n      );\n      return { ...state, level, boardSize };\n    });\n  };\n\n  setTile = () => {\n    this.setState(utility.setTileUtility);\n  };\n\n  setBoard = () => {\n    this.setState(state => {\n      state = utility.setBoardUtility(state);\n      state = utility.updateAvailableMovesUtility(state);\n      return state;\n    });\n  };\n\n  moveTile = (index, e) => {\n    this.setState(state => {\n      state = utility.moveTileUtility(state, index);\n      state = utility.checkBoardUtility(state);\n      return state;\n    });\n  };\n\n  reset = () => {\n    this.setState({ level: 1, boardSize: 4, currGame: false, win: false });\n  };\n\n  checkBoard = () => {\n    this.setState(utility.checkBoardUtility);\n  };\n\n  newGame = () => {\n    this.setState(state => {\n      state = utility.newGameUtility(state, images);\n      state = utility.setBoardUtility(state);\n      state = utility.updateAvailableMovesUtility(state);\n      state = utility.randomizeBoardUtility(state);\n      state = utility.setTileUtility(state);\n      return state;\n    });\n  };\n\n  componentDidMount() {\n    this.setTile();\n    window.addEventListener('resize', this.setTile);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setTile);\n  }\n\n  render() {\n    return (\n      <div className={classes.main}>\n        <div onClick={this.reset} className={classes.reset}>\n          Reset\n        </div>\n        <Splash\n          setOptions={this.setOptions}\n          level={this.state.level}\n          boardSize={this.state.boardSize}\n          newGame={this.newGame}\n          currGame={this.state.currGame}\n          win={this.state.win}\n        />\n        <Board gridSize={this.state.boardSize}>\n          {this.state.board &&\n            this.state.board.map((e, i) => (\n              <Tile\n                clickHandler={this.moveTile}\n                {...e}\n                image={this.state.image}\n                boardSize={this.state.boardSize}\n                index={i + 1}\n                size={this.state.tileSize}\n                lastMove={this.state.lastMove}\n              />\n            ))}\n        </Board>\n        <a\n          className={classes.source}\n          href=\"https://github.com/chrisczach/winniepuzzle\"\n          target=\"blank\"\n        >\n          Source Code\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"app_main__WHPBk\",\"reset\":\"app_reset__2S36O\",\"source\":\"app_source__1uouh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tile\":\"tile_tile__rCIb0\",\"up\":\"tile_up__22Ii1\",\"down\":\"tile_down__3EDG_\",\"left\":\"tile_left__2SL65\",\"right\":\"tile_right__vZCzi\"};"],"sourceRoot":""}